# ДЗ 3.3. Розділити один список на два списки
# Ваша програма повинна вміти розділяти один список на два та помістити їх у новий список.
# Тобто, в результаті повинен вийти список із 2-х списків.
# Якщо в початковому списку непарна кількість елементів, то в першому списку має бути більше елементів.
# Якщо у списку немає елементів, то має бути створений список із двома порожніми списками.
# Важливо! Потрібно створити рішення, яке обробляє 3 випадки - список порожній, у списку парна кількість елементів і в списку непарна кількість елементів.
#

def split_list(input_list):
    if not input_list:                              #
        return [[], []]                             #

    center = (len(input_list) + 1) // 2
    return [input_list[:center], input_list[center:]]
# Приклади:
# Було => стало
# [1, 2, 3, 4, 5, 6] => [[1, 2, 3], [4, 5, 6]]
# [1, 2, 3] => [[1, 2], [3]]
# [1, 2, 3, 4, 5] => [[1, 2, 3], [4, 5]]
# [1] => [[1], []]
# [] => [[], []]
print(split_list([1, 2, 3, 4, 5, 6]))
print(split_list([1, 2, 3]))
print(split_list([1, 2, 3, 4, 5]))
print(split_list([1]))
print(split_list([]))
"""
Логика решения
Проверяем если список input_List пустой, если список пуст ответ будет False и отработает
return которьій возвратит два пустьіх списка.
center - находим индекс при котором список нужно разделить на два списка.
вьічисляем длину списка функцией "len", далее добавляем 1, что бьі в случае непарного количества єлементов в списке,
середина списков, бьіла смещена в большую сторону.
делим результат пополам "//" (целочисленньім делением)
что гарантирует в случае непарного количества єлементов, первьій список будет на один єлемент больше.
Если длина списка input_list больше одного символа 
return возвращает два разделенньіх списка c єлементами которьіе мьі расчитьівали вьіше
"""