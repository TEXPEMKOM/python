# ДЗ 4.1. Перемістити всі нулі до кінця списку
# Написати програму, яка переміщає всі нулі у кінець списку.
# Ваше завдання — змінити список так, щоб усі нулі опинилися наприкінці списку.
# Порядок ненульових чисел має зберегтися!
#
# Приклад
# було -> стало
# дано:
# [0, 1, 0, 12, 3] -> [1, 12, 3, 0, 0]
# [0] -> [0]
# [1, 0, 13, 0, 0, 0, 5] -> [1, 13, 5, 0, 0, 0, 0]
# [9, 0, 7, 31, 0, 45, 0, 45, 0, 45, 0, 0, 96, 0] -> [9, 7, 31, 45, 45, 45, 96, 0, 0, 0, 0, 0, 0, 0]
def zero_to_end(lst):
    no_zero = [x for x in lst if x != 0]    # используем list comprehension для создания нового списку, которьій содержит все єллементьі входного списка которьіе не есть нулями
    zero = len(lst) - len(no_zero)          # Разница между колличеством єллементов входного списка и єллементов не нулевого значения получим количество нолей
    return no_zero + [0] * zero             # Список ненульових елементов соединяется со списком нулей количество которьіх равно zero.
                                            # [0] * zero создает список из заданьіх количества нулей.


# in_list1 = [0, 1, 0, 12, 3]
# in_list2 = [0]
# in_list3 = [1, 0, 13, 0, 0, 0, 5]
in_list4 = [9, 0, 7, 31, 0, 45, 0, 45, 0, 45, 0, 0, 96, 0]
# out_list1 = zero_to_end(in_list1)
# out_list2 = zero_to_end(in_list2)
# out_list3 = zero_to_end(in_list3)
out_list4 = zero_to_end(in_list4)           # Входной список передається в функцию zero_to_end.
# print(out_list1)
# print(out_list2)
# print(out_list3)
print(out_list4)
