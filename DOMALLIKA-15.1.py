# ДЗ 15.1. Клас «Прямокутник
# Створити клас «Прямокутник», у якого необхідно реалізувати два поля (ширина та висота)
# та кілька обов'язкових методів:
# -метод порівняння прямокутників за площею;
# -метод складання прямокутників (площа сумарного прямокутника повинна дорівнювати сумі
#  площ прямокутників, які ви складаєте);
# -mетоди множення прямокутника на число n (це має збільшити площу базового прямокутника
#  в n разів).
# У класі можуть бути створені додаткові (допоміжні методи)
# Декілька уточнень:
# Методи складання, множення, поділу тощо. обов'язково необхідно повертати новий екземпляр класу Прямокутник!
# Для множення, додавання, порівняння, обов'язково потрібно перевизначати "магічні" методи.
# Для множення є вбудований метод mul.
# Коли в результаті мат. дій створюєте новий екземпляр класу Прямокутник, то у цього
# екземпляру, перемноження сторін, має давати необхідну площу. Тобто,  якщо до
# прямокутника, у якого площа дорівнює 8, додаєте інший прямокутник з площею 18, необхідно
# створити новий прямокутник, площа якого дорівнює 26. Площа це довжина, помноженна на  висоту.
# => необхідно підібрати сторони нового створенного прямокутника таким чином, щоб вони давали необхідну площу!

# для перевизначення спеціальних (магічних) методів, які дозволять класу взаємодіяти
# з операціями порівняння, додавання, множення, завантажуємо бібліотеку math


# створюємо клас з змінними ширина та висота
class Rectangle:
    def __init__(self, width, height):
        self.width = width
        self.height = height

    # створюємо метод для обчислення площі
    def area(self):
        return self.width * self.height

    # магічний метод порівняння двох прямокутників
    def __eq__(self, other):
        return self.area() == other.area()
    # магічний метод складання двох прямокутників
    def __add__(self, other):
        total_area = self.area() + other.area()
        # визначимо шо ширина другого прямокутника тотожна ширині нашого екземпляру
        new_width = self.width
        new_height = total_area / new_width
        return Rectangle(new_width, new_height)

    # магічний метод множення прямокутників на число
    def __mul__(self, n):
        new_area = self.area() * n
        # визначимо шо ширина другого прямокутника тотожна ширині нашого екземпляру
        new_width = self.width
        new_height = new_area / new_width
        return Rectangle(new_width, new_height)
    # магічний метод представлення у вигляді строки
    def __str__(self):
        return f"Rectangle (width = {self.width}, height = {self.height})"


# перевіряємо
r1 = Rectangle (3, 5)
r2 = Rectangle (4, 4)

print(r1.area())
print(r2.area())

r3 = r1 + r2
print(r3.area())

r4 = r1 * 2
print(r4.area())

assert (r1 == r2)