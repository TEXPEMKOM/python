# 9.1. Визначити популярність певних слів у тексті
# На вхід функції popular_words передаються два аргументи. Текст та список слів, популярність яких необхідно визначити.
# При вирішенні цього завдання зверніть увагу на такі моменти
# Слова необхідно шукати у всіх регістрах. Тобто. якщо необхідно знайти слово "one",
# значить для нього будуть підходити слова "one", "One", "oNe", "ONE" і т.д.
# Шукані слова завжди вказані в нижньому регістрі
# Якщо слово не знайдено жодного разу, його необхідно повернути у словнику зі значенням 0 (нуль)
# Вхідні параметри: Текст і масив слів, що шукаються.
#
# Вихідні параметри: Словник, у якому ключами є шукані слова та значеннями, скільки разів кожнє слово зустрічаються у орігінальному тексті.
#
# Приклад:
#
# def popular_words (text, words):
#     pass
# assert popular_words('''When I was One I had just begun When I was Two I was nearly new ''', ['i', 'was', 'three', 'near']) == { 'i': 4, 'was': 3, 'three': 0, 'near': 0 }, 'Test1' print('OK')

def popular_words(text, words):
    """
    Функция для определения популярности определенных слов в тексте.

    :param text: Входной текст.
    :param words: Список слов, популярность которых необходимо определить.
    :return: Словарь, где ключи - это искомые слова, а значения - количество их вхождений в текст.
    """
    # Приводим текст к нижнему регистру и разделяем его на слова
    text_lower = text.lower()
    word_list = text_lower.split()

    # Создаем словарь для хранения результатов
    word_count = {word: 0 for word in words}

    # Подсчитываем количество вхождений каждого слова из списка
    for word in word_list:
        if word in word_count:
            word_count[word] += 1

    return word_count

# Тест
assert popular_words('''When I was One I had just begun When I was Two I was nearly new ''', ['i', 'was', 'three', 'near']) == { 'i': 4, 'was': 3, 'three': 0, 'near': 0 }, 'Test1'
print('OK')


