# # 6.2. Конвертер із числа в дату
# Ваше завдання — написати програму, яка переводить число у формат часу у читальному вигляді.
# Користувач повинен ввести число більше або дорівнює 0 і менше ніж 8640000.
# Число, яке є кількістю секунд, необхідно перевести в дні, години, хвилини та секунди.
# Ну і додатковим завданням є турбота про виведення.
# Слово "день" підбирається на основі кількості днів, а години, хвилини і секунди повинні заповнюватися нулями при одноцифрових значеннях.
# Підказка: одна хвилина - 60 сек. , В одній годині 60 * 60 сек, в одній добі 24 * 60 * 60 сек.
# Тобто використовуючи функцію divmod або методи поділу // і % вам необхідно знайти відповідну кількість днів, годин, хвилин, а те що залишиться - це секунди, які менше 60 ;)
# Доповнити провідними нулями можна за допомогою методу zfill(2)
# Приклад:
# 0 -> 0 днів, 00:00:00
# 224930 -> 2 дні, 14:28:50
# 466289 -> 5 днів, 09:31:29
# 950400 -> 11 днів, 00:00:00
# 1209600 -> 14 днів, 00:00:00
# 1900800 - > 22 дні, 00:00:00
# 8639999 -> 99 днів, 23:59:59
# 22493 -> 0 днів, 06:14:53
# 7948799 -> 91 день, 23:59:59

def convert_seconds(seconds):
    """
функция:
    convert_seconds - конвертирует количество секунд в количество минут, часов и дней
переменньіе:
    SECONDS_IN_MINUTE           -       количество секунд в одной минуте
    SECONDS_IN_HOUR             -       количество секунд в одном часе
    SECONDS_IN_DAY              -       количество секунд в одном дне
    days                        -       количество дней и остаток секунд
    hours                       -       количество часов и остаток секунд
    minutes                     -       количество минут и остаток секунд
    day_word                    -       концовка фразьі в зависимости от числа
    time_str                    _       полное количество дней, часов, минут и секунд
алгоритм проверки:
    if days                     -       определяет правильную концовку "день" в зависимости от числа. сначала проверяем
                                        если количество дней заканчивается на 1, но не 11 -
                                        то присваиваем переменной "day_word" концовку "день" для еденичньх чисел.
                                        если число не подходит под первое условие дальше проверяем,
                                        если количество дней заканчивается на 2, 3 или 4, но не але 12-14 -
                                        то присваиваем "day_word" концовку "дні" для множественньіх чисел.
                                        во всех остальньіх случаях присваиваем "day_word" концовку "днів".
формируем вьівод:
    time_str                    -       форматируем ряд с указанием количества дней, часов, минут, секунд,
                                        а так же заполняет нулями при одночисельнном значении
    """
    SECONDS_IN_MINUTE = 60
    SECONDS_IN_HOUR = 60 * SECONDS_IN_MINUTE
    SECONDS_IN_DAY = 24 * SECONDS_IN_HOUR

    # рссчитьіваем количество дней, часов, минут
    days, remainder = divmod(seconds, SECONDS_IN_DAY)
    hours, remainder = divmod(remainder, SECONDS_IN_HOUR)
    minutes, seconds = divmod(remainder, SECONDS_IN_MINUTE)

    if days % 10 == 1 and days % 100 != 11:
        day_word = "день"
    elif 2 <= days % 10 <= 4 and (days % 100 < 10 or days % 100 >= 20):
        day_word = "дні"
    else:
        day_word = "днів"


    time_str = f"{days} {day_word}, {str(hours).zfill(2)}:{str(minutes).zfill(2)}:{str(seconds).zfill(2)}"
    return time_str

# Дано по условию задачи
print(convert_seconds(0))         # 0 днів, 00:00:00
print(convert_seconds(224930))    # 2 дні, 14:28:50
print(convert_seconds(466289))    # 5 днів, 09:31:29
print(convert_seconds(950400))    # 11 днів, 00:00:00
print(convert_seconds(1209600))   # 14 днів, 00:00:00
print(convert_seconds(1900800))   # 22 дні, 00:00:00
print(convert_seconds(8639999))   # 99 днів, 23:59:59
print(convert_seconds(22493))     # 0 днів, 06:14:53
print(convert_seconds(7948799))   # 91 день, 23:59:59

