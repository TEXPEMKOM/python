# 11.3. Перевірка на парність.
# Завдання ускладнюється.
# Ваша функція is_even, як і раніше, повинна повертати True якщо число парне,
# або False якщо число непарне, але при цьому НЕ МОЖНА використовувати ділення у функції,
# та дії пов'язані з ним. Тобто. заборонено використовувати /, //, % та divmod
# Складність ще полягає і в тому, щоб знайти рішення, яке не залежало б від розміру числа.
# Вхідні дані: Ціле число.
# Вихідні дані: True або False
#
# def is_even(number):
#     pass
#
# assert is_even(2494563894038**2) == True, 'Test1'
# assert is_even(1056897**2) == False, 'Test2'
# assert is_even(24945638940387**3) == False, 'Test3'

# V1  Используем побитовое И для проверки последнего бита числа. Если последний бит равен 0, число четное, если 1 — нечетное.
def is_even(number):
    """
    Проверяет, является ли число четным.
    Аргументы:
    number (int): Целое число для проверки.
    Возвращает:
    bool: True, если число четное, иначе False.
    """
    # Используем побитовое И для проверки последнего бита числа.
    # Если последний бит равен 0, число четное, если 1 — нечетное.
    return (number & 1) == 0

# Тестирование функции
assert is_even(2494563894038**2) == True, 'Test1'  # Ожидается True, так как число четное
assert is_even(1056897**2) == False, 'Test2'  # Ожидается False, так как число нечетное
assert is_even(24945638940387**3) == False, 'Test3'  # Ожидается False, так как число нечетное

# V2 Сдвигаем число вправо на один бит и затем обратно влево. Если результат равен исходному числу, то число четное.
def is_even(number):
    """
    Проверяет, является ли число четным.
    Аргументы:
    number (int): Целое число для проверки.
    Возвращает:
    bool: True, если число четное, иначе False.
    """
    # Сдвигаем число вправо на один бит и затем обратно влево.
    # Если результат равен исходному числу, то число четное.
    return (number >> 1) << 1 == number

# Тестирование функции
assert is_even(2494563894038**2) == True, 'Test1'  # Ожидается True, так как число четное
assert is_even(1056897**2) == False, 'Test2'  # Ожидается False, так как число нечетное
assert is_even(24945638940387**3) == False, 'Test3'  # Ожидается False, так как число нечетное

